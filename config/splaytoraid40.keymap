/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE    0
#define SYM     1
#define NAV     2
#define NUM     3
#define FUN     4
#define MEDIA   5
#define MBASE   6
#define MSYM    7
#define MNAV    8
#define MNUM    9
#define MFUN   10
#define MMEDIA 11

&lt {
    quick_tap_ms = <200>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

&sl {
    release-after-ms = <2000>;
};

/ {

    chosen {
        zmk,matrix_transform = &five_column_transform;
    };

    combos {
        compatible = "zmk,combos";
        
        // combos linux/windows
        combo_auml {
            timeout-ms = <50>;
            key-positions = <0 10>;
            bindings = <&kp RA(Q)>;
            layers = <BASE>;
        };
        combo_ouml {
            timeout-ms = <50>;
            key-positions = <9 19>;
            bindings = <&kp RA(P)>;
            layers = <BASE>;
        };
        combo_uuml {
            timeout-ms = <50>;
            key-positions = <7 17>;
            bindings = <&kp RA(Y)>;
            layers = <BASE>;
        };
        combo_szlig {
            timeout-ms = <50>;
            key-positions = <2 12>;
            bindings = <&kp RA(S)>;
            layers = <BASE>;
        };
        combo_euro {
            timeout-ms = <50>;
            key-positions = <17 27>;
            bindings = <&kp RA(N5)>;
            layers = <BASE>;
        };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&lt MEDIA ESC>;
            layers = <BASE>;
        };
        combo_space {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&lt NAV SPACE>;
            layers = <BASE>;
        };
        combo_return {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&lt SYM RET>;
            layers = <BASE>;
        };
        combo_backspace {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&lt NUM BSPC>;
            layers = <BASE>;
        };
        combo_delete {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&lt FUN DEL>;
            layers = <BASE>;
        };
        combo_sl_media {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&sl MEDIA>;
            layers = <BASE>;
        };
        combo_sl_nav {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&sl NAV>;
            layers = <BASE>;
        };
        combo_sl_sym {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&sl SYM>;
            layers = <BASE>;
        };
        combo_sl_num {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&sl NUM>;
            layers = <BASE>;
        };
        combo_sl_fun {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&sl FUN>;
            layers = <BASE>;
        };

        // combos mac
        combo_auml_mac {
            timeout-ms = <50>;
            key-positions = <0 10>;
            bindings = <&auml_mac>;
            layers = <MBASE>;
        };
        combo_ouml_mac {
            timeout-ms = <50>;
            key-positions = <9 19>;
            bindings = <&ouml_mac>;
            layers = <MBASE>;
        };
        combo_uuml_mac {
            timeout-ms = <50>;
            key-positions = <7 17>;
            bindings = <&uuml_mac>;
            layers = <MBASE>;
        };
        combo_szlig_mac {
            timeout-ms = <50>;
            key-positions = <2 12>;
            bindings = <&mac_szlig>;
            layers = <MBASE>;
        };
        combo_euro_mac {
            timeout-ms = <50>;
            key-positions = <17 27>;
            bindings = <&mac_euro>;
            layers = <MBASE>;
        };
        combo_esc_mac {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&lt MMEDIA ESC>;
            layers = <MBASE>;
        };
        combo_space_mac {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&lt MNAV SPACE>;
            layers = <MBASE>;
        };
        combo_return_mac {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&lt MSYM RET>;
            layers = <MBASE>;
        };
        combo_backspace_mac {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&lt MNUM BSPC>;
            layers = <MBASE>;
        };
        combo_delete_mac {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&lt MFUN DEL>;
            layers = <MBASE>;
        };
        combo_sl_media_mac {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&sl MMEDIA>;
            layers = <MBASE>;
        };
        combo_sl_nav_mac {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&sl MNAV>;
            layers = <MBASE>;
        };
        combo_sl_sym_mac {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&sl MSYM>;
            layers = <MBASE>;
        };
        combo_sl_num_mac {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&sl MNUM>;
            layers = <MBASE>;
        };
        combo_sl_fun_mac {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&sl MFUN>;
            layers = <MBASE>;
        };

        // combos universal
        combo_tab {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp TAB>;
        };
        combo_capsWord {
            timeout-ms = <50>;
            key-positions = <22 27>;
            bindings = <&caps_word>;
        };

    };

    macros {
        u_bt0_clr: u_bt0_clr {
            label = "U_BT0_CLR";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &bt BT_SEL 0 &bt BT_CLR>;
        };

        u_bt1_clr: u_bt1_clr {
            label = "U_BT1_CLR";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &bt BT_SEL 1 &bt BT_CLR>;
        };

        u_bt2_clr: u_bt2_clr {
            label = "U_BT2_CLR";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &bt BT_SEL 2 &bt BT_CLR>;
        };

        u_bt3_clr: u_bt3_clr {
            label = "U_BT3_CLR";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &bt BT_SEL 3 &bt BT_CLR>;
        };

        auml_mac_lwr: auml_mac_lwr {
            compatible = "zmk,behavior-macro";
            label = "AUML_MAC_LWR";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp U>
                , <&macro_release &kp LALT>
                , <&macro_tap     &kp A>;
        };

        auml_mac_upr: auml_mac_upr {
            compatible = "zmk,behavior-macro";
            label = "AUML_MAC_UPR";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp U>
                , <&macro_release &kp LALT>
                , <&macro_press   &kp LSHFT>
                , <&macro_tap     &kp A>
                , <&macro_release &kp LSHFT>;
        };

        ouml_mac_lwr: ouml_mac_lwr {
            compatible = "zmk,behavior-macro";
            label = "OUML_MAC_LWR";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp U>
                , <&macro_release &kp LALT>
                , <&macro_tap     &kp O>;
        };

        ouml_mac_upr: ouml_mac_upr {
            compatible = "zmk,behavior-macro";
            label = "OUML_MAC_UPR";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp U>
                , <&macro_release &kp LALT>
                , <&macro_press   &kp LSHFT>
                , <&macro_tap     &kp O>
                , <&macro_release &kp LSHFT>;
        };

        uuml_mac_lwr: uuml_mac_lwr {
            compatible = "zmk,behavior-macro";
            label = "UUML_MAC_LWR";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp U>
                , <&macro_release &kp LALT>
                , <&macro_tap     &kp U>;
        };

        uuml_mac_upr: uuml_mac_upr {
            compatible = "zmk,behavior-macro";
            label = "UUML_MAC_UPR";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp U>
                , <&macro_release &kp LALT>
                , <&macro_press   &kp LSHFT>
                , <&macro_tap     &kp U>
                , <&macro_release &kp LSHFT>;
        };

        mac_szlig: mac_szlig {
            compatible = "zmk,behavior-macro";
            label = "MAC_SZLIG";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp S>
                , <&macro_release &kp LALT>;
        };

        mac_euro: mac_euro {
            compatible = "zmk,behavior-macro";
            label = "MAC_EURO";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT &kp LSHFT>
                , <&macro_tap     &kp N2>
                , <&macro_release &kp LALT &kp LSHFT>;
        };

    };

    behaviors {
        hm: home-row-mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <175>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        hs: home-row-shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_SHIFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <175>;
            // quick-tap-ms = <125>;
            // global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        u_rgb_eff: u_rgb_eff {
            compatible = "zmk,behavior-mod-morph";
            label = "U_RGB_EFF";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_EFF>, <&rgb_ug RGB_EFR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_rgb_hui: u_rgb_hui {
            compatible = "zmk,behavior-mod-morph";
            label = "U_RGB_HUI";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_rgb_sai: u_rgb_sai {
            compatible = "zmk,behavior-mod-morph";
            label = "U_RGB_SAI";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAI>, <&rgb_ug RGB_SAD>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_rgb_bri: u_rgb_bri {
            compatible = "zmk,behavior-mod-morph";
            label = "U_RGB_BRI";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_ep_tog: u_ep_tog {
            compatible = "zmk,behavior-mod-morph";
            label = "U_EP_TOG";
            #binding-cells = <0>;
            bindings = <&ext_power EP_TOG>, <&ext_power EP_OFF>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_rgb_tog: u_rgb_tog {
            compatible = "zmk,behavior-mod-morph";
            label = "U_RGB_TOG";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_TOG>, <&rgb_ug RGB_OFF>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_out_tog: u_out_tog {
            compatible = "zmk,behavior-mod-morph";
            label = "U_OUT_TOG";
            #binding-cells = <0>;
            bindings = <&out OUT_TOG>, <&out OUT_BLE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_bt0_tog: u_bt0_tog {
            compatible = "zmk,behavior-mod-morph";
            label = "U_BT0_TOG";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0>, <&u_bt0_clr>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_bt1_tog: u_bt1_tog {
            compatible = "zmk,behavior-mod-morph";
            label = "U_BT1_TOG";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1>, <&u_bt1_clr>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_bt2_tog: u_bt2_tog {
            compatible = "zmk,behavior-mod-morph";
            label = "U_BT2_TOG";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2>, <&u_bt2_clr>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_bt3_tog: u_bt3_tog {
            compatible = "zmk,behavior-mod-morph";
            label = "U_BT3_TOG";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3>, <&u_bt3_clr>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
      
        auml_mac: auml_mac {
            compatible = "zmk,behavior-mod-morph";
            label = "AUML_MAC";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&auml_mac_lwr>, <&auml_mac_upr>;
        };
        
        ouml_mac: ouml_mac {
            compatible = "zmk,behavior-mod-morph";
            label = "OUML_MAC";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&ouml_mac_lwr>, <&ouml_mac_upr>;
        };
        
        uuml_mac: uuml_mac {
            compatible = "zmk,behavior-mod-morph";
            label = "UUML_MAC";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&uuml_mac_lwr>, <&uuml_mac_upr>;
        };

    };

    keymap {
        compatible = "zmk,keymap";
        
        base_layer {
            label= "BASE";
            bindings = <
                &kp Q         &kp W         &kp F         &kp P         &kp B         &kp J         &kp L         &kp U         &kp Y         &kp QUOT
                &hm LGUI A    &hm LALT R    &hm LCTRL S   &hs LSHFT T   &kp G         &kp M         &hs RSHFT N   &hm RCTRL E   &hm LALT I    &hm LGUI O
                &kp Z         &hm RALT X    &kp C         &kp D         &kp V         &kp K         &kp H         &kp COMMA     &hm RALT DOT  &kp SLASH
                                            &lt MEDIA ESC &lt NAV SPACE &kp TAB       &lt SYM RET   &lt NUM BSPC  &lt FUN DEL
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        sym_layer {
            label= "SYM";
            bindings = <
                &kp LBRC      &kp AMPS      &kp ASTRK     &kp LPAR      &kp RBRC      &none         &none         &none         &none         &none
                &kp COLON     &kp DLLR      &kp PRCT      &kp CRRT      &kp PLUS      &none         &kp RSHFT     &kp RCTRL     &kp LALT      &kp LGUI
                &kp TILDE     &kp EXCL      &kp AT        &kp HASH      &kp PIPE      &none         &none         &none         &kp RALT      &none
                                            &kp LPAR      &kp RPAR      &kp UNDER     &none         &none         &none
             >;
             sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        nav_layer {
            label= "NAV";
            bindings = <
                &none         &none         &none         &none         &none         &none         &none         &none         &none         &none
                &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &none         &none         &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT
                &none         &kp RALT      &none         &none         &none         &none         &kp HOME      &kp PG_DN     &kp PG_UP     &kp END
                                            &none         &none         &none         &kp RET       &kp BSPC      &kp DEL
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        num_layer {
            label= "NUM";
            bindings = <
                &kp LBKT      &kp N7        &kp N8        &kp N9        &kp RBKT      &none         &none         &none         &none         &none
                &kp SEMI      &kp N4        &kp N5        &kp N6        &kp EQUAL     &none         &kp RSHFT     &kp RCTRL     &kp LALT      &kp LGUI
                &kp GRAVE     &kp N1        &kp N2        &kp N3        &kp BSLH      &none         &none         &none         &kp RALT      &none
                                            &kp DOT       &kp N0        &kp MINUS     &none         &none         &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        fun_layer {
            label= "FUN";
            bindings = <
                &kp F12       &kp F7        &kp F8        &kp F9        &kp PSCRN     &none         &none         &none         &none         &bootloader
                &kp F11       &kp F4        &kp F5        &kp F6        &kp SLCK      &none         &kp RSHFT     &kp RCTRL     &kp LALT      &kp LGUI
                &kp F10       &kp F1        &kp F2        &kp F3        &kp PAUSE_BREAK &none       &none         &none         &kp RALT      &none
                                            &kp K_APP     &kp SPACE     &kp TAB       &none         &none         &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        media_layer {
            label= "MEDIA";
            bindings = <
                &bootloader    &to MBASE    &to BASE      &none         &none         &u_rgb_tog    &u_rgb_eff    &u_rgb_hui    &u_rgb_sai    &u_rgb_bri
                &kp LGUI       &kp LALT     &kp LCTRL     &kp LSHFT     &none         &u_ep_tog     &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT
                &none          &kp RALT     &none         &none         &none         &u_out_tog    &u_bt0_tog    &u_bt1_tog    &u_bt2_tog    &u_bt3_tog
                                            &none         &none         &none         &kp C_STOP    &kp C_PP      &kp C_MUTE
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        mbase_layer {
            label= "MBASE";
            bindings = <
                &kp Q         &kp W         &kp F         &kp P         &kp B         &kp J         &kp L         &kp U         &kp Y         &kp QUOT
                &hm LCTRL A   &hm LALT R    &hm LGUI S    &hs LSHFT T   &kp G         &kp M         &hs RSHFT N   &hm LGUI E    &hm LALT I    &hm RCTRL O
                &kp Z         &hm RALT X    &kp C         &kp D         &kp V         &kp K         &kp H         &kp COMMA     &hm RALT DOT  &kp SLASH
                                            &lt MMEDIA ESC &lt MNAV SPACE &kp TAB     &lt MSYM RET  &lt MNUM BSPC &lt MFUN DEL
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        msym_layer {
            label= "MSYM";
            bindings = <
                &kp LBRC      &kp AMPS      &kp ASTRK     &kp LPAR      &kp RBRC      &none         &none         &none         &none         &none
                &kp COLON     &kp DLLR      &kp PRCT      &kp CRRT      &kp PLUS      &none         &kp RSHFT     &kp LGUI      &kp LALT      &kp RCTRL
                &kp TILDE     &kp EXCL      &kp AT        &kp HASH      &kp PIPE      &none         &none         &none         &kp RALT      &none
                                            &kp LPAR      &kp RPAR      &kp UNDER     &none         &none         &none
             >;
             sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        mnav_layer {
            label= "MNAV";
            bindings = <
                &none         &none         &none         &none         &none         &none         &none         &none         &none         &none
                &kp LCTRL     &kp LALT      &kp LGUI      &kp LSHFT     &none         &none         &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT
                &none         &kp RALT      &none         &none         &none         &none         &kp HOME      &kp PG_DN     &kp PG_UP     &kp END
                                            &none         &none         &none         &kp RET       &kp BSPC      &kp DEL
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        mnum_layer {
            label= "MNUM";
            bindings = <
                &kp LBKT      &kp N7        &kp N8        &kp N9        &kp RBKT      &none         &none         &none         &none         &none
                &kp SEMI      &kp N4        &kp N5        &kp N6        &kp EQUAL     &none         &kp RSHFT     &kp LGUI      &kp LALT      &kp RCTRL
                &kp GRAVE     &kp N1        &kp N2        &kp N3        &kp BSLH      &none         &none         &none         &kp RALT      &none
                                            &kp DOT       &kp N0        &kp MINUS     &none         &none         &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        mfun_layer {
            label= "MFUN";
            bindings = <
                &kp F12       &kp F7        &kp F8        &kp F9        &kp PSCRN     &none         &none         &none         &none         &bootloader
                &kp F11       &kp F4        &kp F5        &kp F6        &kp SLCK      &none         &kp RSHFT     &kp LGUI      &kp LALT      &kp RCTRL
                &kp F10       &kp F1        &kp F2        &kp F3        &kp PAUSE_BREAK &none       &none         &none         &kp RALT      &none
                                            &kp K_APP     &kp SPACE     &kp TAB       &none         &none         &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        mmedia_layer {
            label= "MMEDIA";
            bindings = <
                &bootloader    &to MBASE    &to BASE      &none         &none         &u_rgb_tog    &u_rgb_eff    &u_rgb_hui    &u_rgb_sai    &u_rgb_bri
                &kp LCTRL      &kp LALT     &kp LGUI      &kp LSHFT     &none         &u_ep_tog     &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT
                &none          &kp RALT     &none         &none         &none         &u_out_tog    &u_bt0_tog    &u_bt1_tog    &u_bt2_tog    &u_bt3_tog
                                            &none         &none         &none         &kp C_STOP    &kp C_PP      &kp C_MUTE
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

    };

    center_encoder: encoder_center {
		resolution = <2>;
	};

};
